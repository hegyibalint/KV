package hu.bme.mit.kv.event

import-queries hu.bme.mit.kv.queries.*

QueryResultChangeEvent safe(){
	query: safe
	resultChangeType: NEW_MATCH_FOUND
}

QueryResultChangeEvent onSame(){
	query: twoTrainsInSameSection
	resultChangeType: NEW_MATCH_FOUND
}

QueryResultChangeEvent zeroBetween(){
	query: twoTrainsWithZeroSectionsBetweenThem
	resultChangeType: NEW_MATCH_FOUND
}

QueryResultChangeEvent oneBetween(){
	query: twoTrainsWithOneSectionsBetweenThem
	resultChangeType: NEW_MATCH_FOUND
}

Rule debugRule{
	events: safe, onSame, zeroBetween, oneBetween
	action{
		println(ruleInstance.atom.observedEventPatternId.split("\\.").last.split("_pattern").head)
	}
}



 /*
 
AtomicEvent A
AtomicEvent B

ComplexEvent Test(){
	definition: A->B->A->B
}

ComplexEvent Test2(){
	definition: A-> (NOT B ){*} -> A 
}

Rule TestRule{
	events: Test
	action{
		println("Triggered!")
	}
}

Rule Test2Rule{
	events: Test2
	action{
		
	}
}

 */
